#!/bin/bash

#->   cd ~/ && rm -f ./check-all && wget -q https://raw.githubusercontent.com/BLBMS/am-t/moje/0/check-all && chmod +x check-all && ./check-all

LIST="192.168.100.110 192.168.100.111 192.168.100.112 192.168.100.113 192.168.100.114 192.168.100.115 192.168.100.116 \
      192.168.100.117 192.168.100.118 192.168.100.119 192.168.100.120 192.168.100.121 192.168.100.130 192.168.100.135 \
      192.168.100.140 192.168.100.150 192.168.100.151 192.168.100.152 192.168.100.153 192.168.100.154 192.168.100.155 \
      192.168.100.156 192.168.100.157 192.168.100.170 192.168.100.171 192.168.100.172 192.168.100.173 192.168.100.174 \
      192.168.100.175 192.168.100.176 192.168.100.177 192.168.100.178 192.168.100.179"

# ------------------------------------------
SCRIPTPATH=$(dirname $(realpath $0))
BUILD=$(printf "[")
act=0
unact=0
pingall=0
khsall=0

for i in $LIST
 do
  RESPONSE=$(printf "{\"HOST\":\"$i\",\""; $SCRIPTPATH/api.pl -c summary -a $i -p 4068 | tr -d '\0' | sed -r \
  's/=/":"/g; s/;/\",\"/g' | sed 's/|/",/g')$(printf "\""; $SCRIPTPATH/api.pl -c pool -a $i -p 4068 | tr -d \
  '\0' | sed -r 's/=/":"/g' | sed -r 's/;/\",\"/g' | sed 's/|/"},/g')

#  echo -e "\nresponse : "$RESPONSE


 if [[ "$RESPONSE" == *"No Connect"* ]]
 then
  unact=$((unact+1))
  BUILD=$BUILD"{\"HOST\":\"$i\"},"

  echo -e "\033[1;33m'"$RESPONSE"\e[0m"

#  device=$(grep -w "$ip" spisek.list | cut -f 2)


 else
  act=$((act+1))
  BUILD=$BUILD$RESPONSE

  JSON1=$(echo "["$RESPONSE | tr -d '\r\n' | sed "s/.\{0,2\}$//; /^$/d"; printf "}]")
#  echo $JSON1 | jq -c '[.[] | {HOST,POOL,USER,KHS,PING}]'

  ip1=$(echo "$JSON1" | jq -r '.[0].HOST' | awk -F'.' '{print $NF}')
  device=$(grep -w "$ip1" spisek.list | cut -f 2)

#  echo $device

#  echo -e "\033[1;33m["$device" ]\033[0m"$JSON1 | jq -c '[.[] | {HOST,POOL,USER,KHS,PING}]'

  iz_api=$(echo $JSON1 | jq -c '[.[] | {HOST,POOL,USER,KHS,PING}]')

  echo $device " " $iz_api

  ping1=$(echo "$JSON1" | jq -r '.[0].PING')
  pingall=$((pingall + ping1))

  khs1=$(echo "$JSON1" | jq -r '.[0].KHS' | awk -F'.' '{print $1}')
  khsall=$((khsall + khs1))

 fi
done
JSON=$(echo $BUILD | tr -d '\r\n' | sed "s/.\{0,2\}$//; /^$/d"; printf "}]")
#echo $JSON | jq -c '[.[] | {HOST,POOL,USER,KHS,DIFF,ACC,REJ,WAIT,UPTIME,TS}]'

mhs=$((khsall / 1000))
rest=$((khsall - $((mhs * 1000))))
echo "aktivni    : "$act
echo "neaktivni  : "$unact
echo "skupen hash: "$mhs"."$rest" MH/s"
#echo "hash (KHs) : "$khsall
echo "povp. ping : "$((pingall / act))


#echo $JSON

exit 0

watch --color -n 20 "./check-all-org | jq -c '.[] | [.HOST,.POOL,.KHS]' | sed '/null/s/.*/\x1B[31m&\x1B[0m/g; /mrr/s/.*/\x1B[32m&\x1B[0m/g' | column"

#  watch --color -n 60 "./check-all | jq -c '.[] | [.HOST,.POOL,.KHS]' | sed '/pool.verus.io/s/.*/\x1B[32m&\x1B[0m/g; /pool.verus.io/!s/.*/\x1B[31m&\x1B[0m/g' | column"
#  watch --color -n 60 "./check-all | jq -c '.[] | [.HOST,.POOL,.KHS]' | sed '/pool.verus.io/s/.*/\x1B[32m&\x1B[0m/g; /pool.verus.io/!s/.*/\x1B[31m&\x1B[0m/g' | column"


BUILD   :[{
"HOST":"192.168.100.110",
"NAME":"ccminer_CPU",
"VER":"3.8.3-4",
"API":"1.9",
"ALGO":"verus",
"GPUS":"1",
"KHS":"3679.99",
"SOLV":"0",
"ACC":"11136",
"REJ":"58",
"ACCMN":"4.004",
"DIFF":"139264.000000",
"NETKHS":"0",
"POOLS":"1",
"WAIT":"489",
"UPTIME":"166859",
"TS":"1695931636",
"POOL":"mrr",
"ALGO":"verus",
"URL":"stratum+tcp://pool:9999",
"USER":"USER007",
"SOLV":"0",
"ACC":"11136",
"REJ":"58",
"STALE":"0",
"H":"0",
"JOB":"00017deb",
"DIFF":"139264.000000",
"BEST":"17023680.000000",
"N2SZ":"28",
"N2":"0x01000000000000000000000000000000000000000000000000000000",
"PING":"43",
"DISCO":"3",
"WAIT":"489",
"UPTIME":"166792",
"LAST":"10"}

